import { connect } from 'react-redux';
import { State, Dispatch } from 'store/types';
import {
  setDfspCsrCertificate,
  submitDfspCsrCertificate,
  autogenerateDfspCsrCertificate,
  showDfspCsrCertificateModal,
  hideDfspCsrCertificateModal,
} from './actions';
import {
  getDfspCsrCertificate,
  getIsDfspCsrModalVisible,
  getIsDfspCsrSubmitEnabled,
  getIsDfspCsrSubmitPending,
  getIsDfspCsrAutogeneratePending,
} from './selectors';

import './index.css';

const stateProps = (state: State) => ({
  certificate: getDfspCsrCertificate(state),
  isModalVisible: getIsDfspCsrModalVisible(state),
  isSubmitEnabled: getIsDfspCsrSubmitEnabled(state),
  isSubmitPending: getIsDfspCsrSubmitPending(state),
  isAutogeneratePending: getIsDfspCsrAutogeneratePending(state),
});

const actionProps = (dispatch: Dispatch) => ({
  onChange: (cert: string) => dispatch(setDfspCsrCertificate({ cert })),
  onSubmit: () => dispatch(submitDfspCsrCertificate()),
  onAutogenerateClick: () => dispatch(autogenerateDfspCsrCertificate()),
  onViewClick: () => dispatch(showDfspCsrCertificateModal()),
  onModalCloseClick: () => dispatch(hideDfspCsrCertificateModal()),
});

export default connect(stateProps, actionProps);
